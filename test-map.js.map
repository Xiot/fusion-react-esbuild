{"version":3,"sources":["<stdin>"],"names":[],"mappings":";;;;;;;;;;AACA,OAAA,KAAA,IAAA,QAAA,EAAA,SAAA,EAAA,WAAA,QAAA,OAAA;;AAMA,MAAM,OAAA,GAAU,eAAA,MAAA,SAAC,KAAD,IAAC;AAAA;;AACf,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAA,CAAS,CAAT,CAA1B;AACA,EAAA,SAAA,CAAU,MAAA;AACR,UAAM,MAAA,GAAS,WAAA,CAAY,MAAM,QAAA,CAAS,CAAA,IAAK,CAAA,GAAI,CAAlB,CAAlB,EAAwC,GAAxC,CAAf;AACA,WAAO,MAAM,aAAA,CAAc,MAAd,CAAb;AAA2B,GAF7B,EAGG,EAHH,CAAA;AAKA,SAAO,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AAAK,IAAA,KAAA,EAAO;AAAC,MAAA,OAAA,EAAS,cAAV;AAA0B,MAAA,KAAA,EAAO;AAAjC;AAAZ,GAAA,EAAuD,KAAvD,CAAP;AAA8D,CAPhD,mCAAA,SAAA,CAAhB;;MAAM,O;;AAUN,MAAM,UAAA,GAAa,eAAA,MAAA,WAAA,MAAA;AAAA;;AACjB,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAA,CAAS,IAAA,CAAK,GAAL,EAAT,CAAxB;AACA,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAA,CAAS,EAAT,CAA5B;AACA,QAAM,OAAA,GAAU,WAAA,CAAa,MAAA;AAC3B,IAAA,SAAA,CAAU,SAAV,CAAA;AACA,IAAA,KAAA,CAAM,OAAN,CAAA,CACG,IADH,CACQ,CAAA,IAAK,CAAA,CAAE,IAAF,EADb,EAEG,IAFH,CAEQ,CAAC;AAAC,MAAA,IAAA,EAAA;AAAD,KAAD,KAAE;AACN,MAAA,OAAA,CAAQ,KAAR,CAAA;AACA,MAAA,SAAA,CAAU,SAAV,CAAA;AAAU,KAJd,EAMG,KANH,CAMS,EAAA,IAAA;AACL,MAAA,SAAA,CAAU;AAAA,EAAW,EAAA,EAArB,CAAA;AAAqB,KAPzB;AAOyB,GATX,EAWb,EAXa,CAAhB;AAaA,SACE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAK,eAAL,EAAmB,IAAnB,CADF,EAEE,eAAA,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA;AAAQ,IAAA,OAAA,EAAS;AAAjB,GAAA,EAA0B,SAA1B,CAFF,EAGE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAM,MAAN,CAHF,CADF;AAIU,CApBO,mCAAA,YAAA,CAAnB;;MAAM,U;;AA8BC,MAAM,KAAA,GAAQ,eAAA,MAAA,OAAC,KAAD,IAAC;AACpB,SACE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAK,QAAL,EAAY,KAAA,CAAM,IAAlB,CADF,EAEE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAM,KAAA,CAAM,OAAZ,CAFF,EAGE,eAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAK,SAAL,EAAY,eAAA,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA,IAAA,CAAZ,CAHF,EAIE,eAAA,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA,IAAA,CAJF,CADF;AAKI,CANe,EAAA,OAAA,CAAd;;MAAM,K","sourcesContent":["//      \nimport React, {useState, useEffect, useCallback} from 'react';\n\n                     \n\n \n\nconst Counter = (props              ) => {\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    const handle = setInterval(() => setValue(v => v + 1), 1000);\n    return () => clearInterval(handle);\n  }, []);\n\n  return <div style={{display: 'inline-block', color: 'blue'}}>{value}</div>\n}\n\nconst ServerTime = () => {\n  const [time, setTime] = useState(Date.now());\n  const [status, setStatus] = useState('');\n  const getTime = useCallback( () => {\n    setStatus('calling');\n    fetch('/time')\n      .then(x => x.json())\n      .then(({time}) => {\n        setTime(time);\n        setStatus('success');\n      })\n      .catch(ex => {\n        setStatus(`failed\\n${ex}`)\n      });\n  }, []);\n\n  return (\n    <div>\n      <div>Server Time: {time}</div>\n      <button onClick={getTime}>refresh</button>\n      <pre>{status}</pre>\n    </div>\n  )\n}\n\n                   \n               \n                 \n \n\nexport const Hello = (props            ) => {\n  return (\n    <div>\n      <div>Hello {props.name}</div>\n      <div>{props.message}</div>\n      <div>Value: <Counter /></div>\n      <ServerTime />\n    </div>\n  )\n}"]}